# Configuration Nginx pour l'API SellerAmp ROI
# À placer dans /etc/nginx/sites-available/selleramp-roi-api

server {
    listen 80;
    server_name votre-domaine.com;  # Remplacez par votre domaine

    # Logs
    access_log /var/log/nginx/selleramp-roi-api.access.log;
    error_log /var/log/nginx/selleramp-roi-api.error.log;

    # Proxy vers l'application Node.js
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts pour les requêtes longues (Puppeteer peut prendre du temps)
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Gestion des erreurs
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Configuration HTTPS (optionnel, après installation de SSL)
# server {
#     listen 443 ssl http2;
#     server_name votre-domaine.com;
#
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#
#     # Configuration SSL moderne
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # Reste de la configuration identique...
#     location / {
#         proxy_pass http://localhost:3000;
#         # ... autres directives proxy
#     }
# } 